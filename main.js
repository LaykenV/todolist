(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{w:()=>n});function t(e,t,o,n){this.title=e,this.description=t,this.dueDate=o,this.priority=n}function o(e,t=[]){this.title=e,this.projectTasks=t}console.log("h");const n=[];!function(){const e=document.querySelector(".dropbutton"),t=document.querySelector(".dropdown");console.log("works"),t.classList.add("gone"),e.addEventListener("click",(function(){t.classList.toggle("gone")}))}(),function(e){const o=document.querySelector("#addtask"),n=document.querySelector("#taskname"),c=document.querySelector("#description"),s=document.querySelector("#duedate"),l=document.querySelector("#submit"),d=document.querySelector(".taskpopup");d.classList.add("gone"),o.addEventListener("click",(function(){d.classList.remove("gone")})),l.addEventListener("click",(function(){let o=n.value,l=c.value,i=s.value,r=document.querySelector('input[name="priority"]:checked').value;console.log(r);const a=new t(o,l,i,r);console.log(a),d.classList.add("gone"),e.push(a),console.log(e),function(e){const t=document.querySelector(".tasklist"),o=document.createElement("div");o.classList.add("task");const n=document.createElement("button");n.classList.add("taskbutton");const c=document.createElement("p");c.classList.add("taskdesc"),c.textContent=`${e.title}`;const s=document.createElement("p");s.classList.add("taskdate"),s.textContent=`${e.dueDate}`,t.appendChild(o),o.appendChild(n),o.appendChild(c),o.appendChild(s),"lowpriority"==`${e.priority}`?o.style.border="solid yellow 2px":"highpriority"==`${e.priority}`&&(o.style.border="solid red 2px")}(a)}))}(n),function(e){const t=document.querySelector("#addproject"),c=document.querySelector("#projectname"),s=document.querySelector("#addprojectform"),l=document.querySelector("#projectsubmit"),d=document.querySelector("#projectcancel");s.classList.add("gone"),t.addEventListener("click",(function(){s.classList.remove("gone"),t.classList.add("gone")})),d.addEventListener("click",(function(){s.classList.add("gone"),t.classList.remove("gone")})),l.addEventListener("click",(function(){const l=new o(c.value);console.log(l),t.classList.remove("gone"),s.classList.add("gone"),function(e){const t=document.createElement("div");t.classList.add("projectlistitem"),t.textContent=`${e.title}`,document.querySelector(".projectselector").appendChild(t)}(l),e.push(l),function(e){let t=document.querySelectorAll(".projectlistitem");const o=document.querySelector(".tasklist");document.querySelectorAll(".projectlistitem"),document.querySelectorAll(".projectlistitem");for(let n=0;n<t.length;n++)console.log(t[n]),t[n].addEventListener("click",(function(){const c=t[n].textContent;console.log(c);for(let t=0;t<e.length;t++)""==!document.querySelector(".tasklist").innerHTML&&o.removeChild(o.lastChild);for(let t=0;t<e.length;t++){const o=e[t];if(o.description==c){const e=document.querySelector(".tasklist"),t=document.createElement("div");t.classList.add("task");const n=document.createElement("button");n.classList.add("taskbutton");const c=document.createElement("p");c.classList.add("taskdesc"),c.textContent=`${o.title}`;const s=document.createElement("p");s.classList.add("taskdate"),s.textContent=`${o.dueDate}`,e.appendChild(t),t.appendChild(n),t.appendChild(c),t.appendChild(s),console.log("works"),"lowpriority"==`${o.priority}`?t.style.border="solid yellow 2px":"highpriority"==`${o.priority}`&&(t.style.border="solid red 2px")}}}))}(n)}))}([]),document.querySelector("#alldates").addEventListener("click",(function(){!function(e){const t=document.querySelector(".tasklist");for(let o=0;o<e.length;o++)""==!document.querySelector(".tasklist").innerHTML&&t.removeChild(t.lastChild);for(let o=0;o<e.length;o++){const n=e[o],c=document.createElement("div");c.classList.add("task");const s=document.createElement("button");s.classList.add("taskbutton");const l=document.createElement("p");l.classList.add("taskdesc"),l.textContent=`${n.title}`;const d=document.createElement("p");d.classList.add("taskdate"),d.textContent=`${n.dueDate}`,t.appendChild(c),c.appendChild(s),c.appendChild(l),c.appendChild(d),console.log("works"),"lowpriority"==`${n.priority}`?c.style.border="solid yellow 2px":"highpriority"==`${n.priority}`&&(c.style.border="solid red 2px")}}(n)})),document.querySelector("#todaydate").addEventListener("click",(function(){!function(e){let t=new Date,o=t.getDate(),n=(t.getMonth()+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1}),c=`${t.getFullYear()}-${n}-${o}`;const s=document.querySelector(".tasklist");for(let t=0;t<e.length;t++)""==!document.querySelector(".tasklist").innerHTML&&s.removeChild(s.lastChild);for(let t=0;t<e.length;t++){const o=e[t];if(console.log("working"),console.log(o.dueDate),console.log(c),o.dueDate==c){const e=document.createElement("div");e.classList.add("task");const t=document.createElement("button");t.classList.add("taskbutton");const n=document.createElement("p");n.classList.add("taskdesc"),n.textContent=`${o.title}`;const c=document.createElement("p");c.classList.add("taskdate"),c.textContent=`${o.dueDate}`,s.appendChild(e),e.appendChild(t),e.appendChild(n),e.appendChild(c),console.log("works"),"lowpriority"==`${o.priority}`?e.style.border="solid yellow 2px":"highpriority"==`${o.priority}`&&(e.style.border="solid red 2px")}}}(n)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,